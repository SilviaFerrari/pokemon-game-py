import pygame
import time
import random
from pygame.locals import *
import sys, pygame
#window_width=ls
#window_height=hs
#gameDisplay=sdg
pygame.init()

white = (255,255,255)
black = (0,0,0)
red = (255,0,0)
blue = (0,0,255)
green = (0,200,50)
ls = 1333
hs = 1000

sdg = pygame.display.set_mode((ls,hs))
pygame.display.set_caption("POKEMON")

clock = pygame.time.Clock()
FPS = 15
blockSize = 30.0
noPixel = 0

myfont4 = pygame.font.SysFont("Georgia", 100)
textsurface4 = myfont4.render("NOME", False, (225,0,0))
m4_l = 425
m4_h = 100
def drawtextsurface4(m4_l,m4_h):
    sdg.blit(textsurface4,(m4_l,m4_h))
myfont5 = pygame.font.SysFont("Georgia", 70)
textsurface5 = myfont5.render("Cattura piÃ¹ pokemon che puoi!", False, (225,0,0))
m5_l = 175
m5_h = 300
def drawtextsurface5(m5_l,m5_h):
    sdg.blit(textsurface5,(m5_l,m5_h))
myfont6 = pygame.font.SysFont("Georgia", 50)
textsurface6 = myfont6.render("ATTENZIONE: non tutti si faranno catturare subito!", False, (0,0,0))
m6_l = 100
m6_h = 500
def drawtextsurface6(m6_l,m6_h):
    sdg.blit(textsurface6,(m6_l,m6_h))
myfont7 = pygame.font.SysFont("Georgia", 50)
textsurface7 = myfont7.render("Premi S per iniziare il gioco", False, (0,0,0))
m7_l = 375
m7_h = 700
def drawtextsurface7(m7_l,m7_h):
    sdg.blit(textsurface7,(m7_l,m7_h))

myfont = pygame.font.SysFont("Georgia", 100)
textsurface = myfont.render("HAI PERSO!", False, (225,0,0))
m1_l = 425
m1_h = 100
def drawtextsurface(m1_l,m1_h):
    sdg.blit(textsurface,(m1_l,m1_h))
myfont2 = pygame.font.SysFont("Georgia", 50)
textsurface2 = myfont2.render("Premi C per iniziare una nuova partita", False, (0,0,0))
m2_l = 275
m2_h = 300
def drawtextsurface2(m2_l,m2_h):
    sdg.blit(textsurface2,(m2_l,m2_h))
myfont3 = pygame.font.SysFont("Georgia", 50)
textsurface3 = myfont3.render("Premi E per uscire dal gioco", False, (0,0,0))
m3_l = 375
m3_h = 500
def drawtextsurface3(m3_l,m3_h):
    sdg.blit(textsurface3,(m3_l,m3_h))

p = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\prato_gioco.png")
pl = 0
ph = 0
def draw_garden(pl,ph):
        sdg.blit(p,(pl,ph))
poke_open = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\poke_distrutta.png")
fl = 550
fh = 700
def drawpoke_open(fl,fh):
    sdg.blit(poke_open,(fl,fh))
poke = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\pokeball_gioco.png")
aa = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\lbasour.png")
bb = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\cane.png")
cc = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\cavallo.png")
dd = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\charisard.png")
ee = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\charmander.png")
ff = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\giphy.png")
gg = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\insetto.png")
hh = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\leone.png")
ii = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\lupo.png")
jj = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\metallo.png")
kk = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\pichaku.gif")
ll = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\pokemans_467.png")
mm = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\laichou.png")
nn = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\Squirtle.png")
oo = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\lalpa.png")
pp = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\lopo.png")
qq = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\lola.png")
rr = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\lolatile.png")
ss = pygame.image.load("E:\GIOCO_PYTHON\IMG_POKE\lolpe.png")
ball = [aa,bb,cc,dd,ee,ff,gg,hh,ii,jj,kk,ll,mm,oo,pp,qq,rr,ss]
       
def snake(blockSize, snakelist):
        for size in snakelist:
                pygame.draw.rect(sdg, green,[size[0],size[1],blockSize,blockSize])
                sdg.blit(poke,(snakelist[-1][0], snakelist[-1][1]))



def game_intro():

    intro = True
    while intro:
        sdg.fill(white)
        draw_garden(pl,ph)
        drawtextsurface4(m4_l,m4_h)
        drawtextsurface5(m5_l,m5_h)
        drawtextsurface6(m6_l,m6_h)
        drawtextsurface7(m7_l,m7_h)
        pygame.display.update()
        clock.tick(FPS)
                
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_s:
                    intro = False
        
                
def game_loop():
    gameExit = False
    gameOver = False

    lead_x = ls/2
    lead_y = hs/2

    change_pixels_of_x = 0
    change_pixels_of_y = 0

    snakelist = []
    snakeLength = 1

    randomAppleX = round(random.randrange(0, ls-blockSize)/30.0)*30.0
    randomAppleY = round(random.randrange(0, hs-blockSize)/30.0)*30.0
    
    while not gameExit:
        
        while gameOver == True:
            sdg.fill(white)
            draw_garden(pl,ph)
            drawtextsurface(m1_l,m1_h)
            drawtextsurface2(m2_l,m2_h)
            drawtextsurface3(m3_l,m3_h)
            drawpoke_open(fl,fh)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    gameOver = False
                    gameExit = True
                    
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_e:
                        gameExit = True
                        gameOver = False
                    if event.key == pygame.K_c:
                        game_loop()
            
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                gameExit = True

            if event.type == pygame.KEYDOWN:

                leftArrow = event.key == pygame.K_LEFT
                rightArrow = event.key == pygame.K_RIGHT
                upArrow = event.key == pygame.K_UP
                downArrow = event.key == pygame.K_DOWN
                
                if leftArrow:
                    change_pixels_of_x = -blockSize
                    change_pixels_of_y = noPixel
                elif rightArrow:
                    change_pixels_of_x = blockSize
                    change_pixels_of_y = noPixel
                elif upArrow:
                    change_pixels_of_y = -blockSize
                    change_pixels_of_x = noPixel
                elif downArrow:
                    change_pixels_of_y = blockSize
                    change_pixels_of_x = noPixel

        if lead_x >= ls or lead_x < 0 or lead_y >= hs or lead_y < 0:
                gameOver = True
                   
        lead_x += change_pixels_of_x
        lead_y += change_pixels_of_y
        
        sdg.fill(white)
        draw_garden(pl,ph)
        AppleThickness = 30.0
        
        sdg.blit(ball[0],(randomAppleX, randomAppleY))

        snakehead = []
        snakehead.append(lead_x)
        snakehead.append(lead_y)
        snakelist.append(snakehead)

        if len(snakelist) > snakeLength:
            del snakelist[0]
            
        for eachSegment in snakelist [:-1]:
            if eachSegment == snakehead:
                gameOver = True
                
        snake(blockSize, snakelist)
        
        pygame.display.update()
        
        if lead_x >= randomAppleX and lead_x <= randomAppleX + AppleThickness: 
            if lead_y >= randomAppleY and lead_y <= randomAppleY + AppleThickness:
                       
                randomAppleX = round(random.randrange(0, ls-blockSize)/30.0)*30.0
                randomAppleY = round(random.randrange(0, hs-blockSize)/30.0)*30.0
                snakeLength += 1
                
                d = random.randint(0,19)
                ball[0] = ball[d]
                sdg.blit(ball[d],(randomAppleX,randomAppleY)) 
             
        clock.tick(FPS)

    pygame.quit()
    quit()
game_intro()
game_loop()
