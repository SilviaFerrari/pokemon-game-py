import pygame
from pygame.locals import *
pygame.init()
pygame.font.init()
hs = 950
ls = 1450
sdg = pygame.display.set_mode((ls,hs))
pygame.display.set_caption("JumpHell")
white = (255,255,255)
black = (0,0,0)
red = (255,0,0)
blue = (0,0,255)
deepskyblue1 = (0,191,225)
green = (0,255,0)

T = pygame.image.load("epicfail2.png")
V = pygame.image.load("smbl.png")
L = pygame.image.load("lava.jpg")
K_O = pygame.image.load("ostacolo_inferno.png")
K_L = pygame.image.load("ostacolo_inferno_L.png")
K_R = pygame.image.load("ostacolo_inferno_R.png")
K_U = pygame.image.load("ostacolo_inferno_U.png")
P = pygame.image.load("pergamena_arrotilata.png")

class player(object):
    def __init__(self):
        self.rect = pygame.Rect(50,50,40,40)
    def image(self):
        img = pygame.image.load("smb3.png")
        self.rect.blit(img,(0,0))

    def move(self, px, py):
        if px != 0:
            self.move_single_axis(px, 0)
        if py != 0:
            self.move_single_axis(0, py)

    def move_single_axis(self, px, py):
        self.rect.x += px
        self.rect.y += py
        for wall in walls:
            if self.rect.colliderect(wall.rect):
                if px > 0:
                    self.rect.right = wall.rect.left
                if px < 0:
                    self.rect.left = wall.rect.right
                if py > 0:
                    self.rect.bottom = wall.rect.top
                if py < 0:
                    self.rect.top = wall.rect.bottom

class wall(object):
    def __init__(self, position):
        walls.append(self)
        self.rect = pygame.Rect(position[0], position[1], 50, 50)
    
level = 1        
clock = pygame.time.Clock()
walls = []
player = player()
def level_1():
    level_1 = [
    '#############################',
    '#x           ################',
    '#            uuuuu###########',
    '#   looooor       uuuuuu#####',
    '#   l#####r             uuuu#',
    '#   luuuuur  ooo            #',
    '#            ###ooooo       #',
    '#o           #P######oooo   #',
    '############## ###########  #',
    '#uuuuuuu       #r        #  #',
    '#              #r        #  #',
    '#        oooooo###oo  o  #  #',
    '#  o#o#o########u###  #  #  #',
    '#  #########  u    #  u  #  #',
    '#  #       #       u     #  #',
    '#  #       #    o     o  #  #',
    '#     oo   #  o #     #  #  #',
    '#     ##      # #  o  #     #',
    '#############################',
    ]
    x = y = 0
    for row in level_1:
        for col in row:
            if col == "#":
                wall((x,y))
            if col == "P":
                end_rect = pygame.Rect(x, y, 50, 50)
                level +=1
            x += 50
        y += 50
        x = 0
    
walls = []
def level_2():
    level_2 = [
    '###        ###########   ####',
    '#x#           #######       #',
    '# ### # #      #####        #',
    '    # #   #                  ',
    '    # #   #          ##      ',
    '    #   #            ##     #',
    '    #   #    ###     ##     #',
    '    # # #      ########     #',
    '### # #   #    ########     #',
    '    # #   #    ##     ###   #',
    '    #   ###    ##     ###   #',
    '#  ##   #                    ',
    '   #               #         ',
    '  ##         #     #         ',          
    '          #  #     #         ',
    '     #    ###################',
    '     #                     P ',
    '     #                       ', 
    '######                      #',
    ]
    x = y = 0
    for row in level_2:
        for col in row:
            if col == "#":
                wall((x,y))
            if col == "P":
                end_rect = pygame.Rect(x, y, 50, 50)
            x += 50
        y += 50
        x = 0

run = True
while run:
    clock.tick(60)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        
    key = pygame.key.get_pressed()
    if key[pygame.K_LEFT]:
        player.move(-4, 0)
    if key[pygame.K_RIGHT]:
        player.move(4, 0)
    if key[pygame.K_UP]:
        player.move(0, -4)
    if key[pygame.K_DOWN]:
        player.move(0, 4)
    if key[pygame.K_SPACE]:
        player.move(0, -6)
                        
    if event.type == pygame.KEYUP:
        if event.key == pygame.K_RIGHT or event.key == pygame.K_LEFT:
            player.move(0,0)
        if event.key == pygame.K_UP or event.key == pygame.K_DOWN:
            player.move(0,0)
        if event.key == pygame.K_SPACE:
            player.move(0, 6)
    pygame.display.flip()

    if player.rect.colliderect(end_rect):
        sdg.fill(black)
            
    for wall in walls:
        pygame.draw.rect(sdg,(white), wall.rect)
        
    pygame.draw.rect(sdg,(blue), end_rect)
    pygame.draw.rect(sdg,(red), player.rect)
    
    pygame.display.flip()
pygame.quit()
quit()
